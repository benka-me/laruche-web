{"ast":null,"code":"import { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { HttpLink } from 'apollo-link-http';\nimport fetch from 'isomorphic-unfetch';\nexport default function createApolloClient(initialState, ctx) {\n  // The `ctx` (NextPageContext) will only be present on the server.\n  // use it to extract auth headers (ctx.req) or similar.\n  return new ApolloClient({\n    ssrMode: true,\n    link: new HttpLink({\n      uri: 'http://192.168.1.96:8088',\n      // Server URL (must be absolute)\n      credentials: 'same-origin',\n      // Additional fetch() options like `credentials` or `headers`\n      fetch\n    }),\n    cache: new InMemoryCache().restore(initialState)\n  });\n}","map":{"version":3,"sources":["/Users/benka/go/src/github.com/benka-me/laruche-web/graph/apollo-client.tsx"],"names":["ApolloClient","InMemoryCache","HttpLink","fetch","createApolloClient","initialState","ctx","ssrMode","link","uri","credentials","cache","restore"],"mappings":"AAAA,SAASA,YAAT,QAA6B,eAA7B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,eAAe,SAASC,kBAAT,CAA4BC,YAA5B,EAA0CC,GAA1C,EAA+C;AAC5D;AACA;AACA,SAAO,IAAIN,YAAJ,CAAiB;AACtBO,IAAAA,OAAO,EAAE,IADa;AAEtBC,IAAAA,IAAI,EAAE,IAAIN,QAAJ,CAAa;AACjBO,MAAAA,GAAG,EAAE,0BADY;AACgB;AACjCC,MAAAA,WAAW,EAAE,aAFI;AAEW;AAC5BP,MAAAA;AAHiB,KAAb,CAFgB;AAOtBQ,IAAAA,KAAK,EAAE,IAAIV,aAAJ,GAAoBW,OAApB,CAA4BP,YAA5B;AAPe,GAAjB,CAAP;AASD","sourcesContent":["import { ApolloClient } from 'apollo-client'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { HttpLink } from 'apollo-link-http'\nimport fetch from 'isomorphic-unfetch'\n\nexport default function createApolloClient(initialState, ctx) {\n  // The `ctx` (NextPageContext) will only be present on the server.\n  // use it to extract auth headers (ctx.req) or similar.\n  return new ApolloClient({\n    ssrMode: true,\n    link: new HttpLink({\n      uri: 'http://192.168.1.96:8088', // Server URL (must be absolute)\n      credentials: 'same-origin', // Additional fetch() options like `credentials` or `headers`\n      fetch,\n    }),\n    cache: new InMemoryCache().restore(initialState),\n  })\n}\n"]},"metadata":{},"sourceType":"module"}