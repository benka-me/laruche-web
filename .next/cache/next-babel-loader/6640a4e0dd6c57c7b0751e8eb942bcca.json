{"ast":null,"code":"var _jsxFileName = \"/Users/benka/go/src/github.com/benka-me/laruche-web/components/navigation/navigation.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useContext, useState } from \"react\";\nimport router from \"next/router\";\nimport { logout } from \"utils/utils\";\nimport Context from \"context/context\";\nimport { useTranslation } from \"react-i18next\";\nimport { slide as Slide } from \"react-burger-menu\";\nimport { Messages } from \"i18n/i18n\";\nimport cssDesktop from \"./navigation-desktop.scss\";\nimport cssMobile from \"./navigation-mobile.scss\";\nimport { Container } from \"components/class/container/container\";\nimport { GiBee } from \"react-icons/gi\";\nimport { Button } from \"components/class/button/button\";\nconst links = [{\n  name: Messages.contact,\n  onClick: e => router.push(\"/contact\", \"/contact\")\n}, {\n  name: \"Get Started\",\n  onClick: e => router.push(\"/get-started\", \"/get-started\")\n}];\nexport default (() => {\n  const {\n    login,\n    setLogin,\n    title\n  } = useContext(Context);\n  const {\n    t\n  } = useTranslation();\n  return __jsx(React.Fragment, null, __jsx(Mobile, {\n    login: login,\n    setLogin: setLogin,\n    title: title,\n    t: t,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), __jsx(Desktop, {\n    login: login,\n    setLogin: setLogin,\n    title: title,\n    t: t,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }));\n});\n\nconst Desktop = ({\n  setLogin,\n  title,\n  login,\n  t\n}) => __jsx(\"div\", {\n  className: cssDesktop.navbar,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 3\n  }\n}, __jsx(Container, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }\n}, __jsx(\"div\", {\n  className: cssDesktop.menu,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 7\n  }\n}, __jsx(\"div\", {\n  className: cssDesktop.menuLeft,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }\n}, __jsx(\"button\", {\n  onClick: e => router.push(\"/\"),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 11\n  }\n}, __jsx(GiBee, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 13\n  }\n})), title), __jsx(\"div\", {\n  className: cssDesktop.menuRight,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }\n}, login ? __jsx(DesktopItem, {\n  link: {\n    name: Messages.logout,\n    onClick: e => logout(e, setLogin)\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 13\n  }\n}) : null, links.map((link, i) => __jsx(DesktopItem, {\n  key: i,\n  link: link,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 13\n  }\n}))))));\n\nconst Mobile = ({\n  setLogin,\n  title,\n  login,\n  t\n}) => {\n  const {\n    0: open,\n    1: setOpen\n  } = useState(false);\n\n  const closeBurger = () => setOpen(false);\n\n  return __jsx(\"div\", {\n    className: cssMobile.mobile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: cssMobile.back,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: cssMobile.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, title)), __jsx(Menu, {\n    setOpen: setOpen,\n    open: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, __jsx(BurgerItem, {\n    link: {\n      name: Messages.home,\n      onClick: e => router.push(\"/\")\n    },\n    closeBurger: closeBurger,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }), __jsx(React.Fragment, null, links.map((link, i) => __jsx(BurgerItem, {\n    link: link,\n    key: i,\n    closeBurger: closeBurger,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }))), login ? __jsx(BurgerItem, {\n    link: {\n      name: Messages.logout,\n      onClick: e => logout(e, setLogin)\n    },\n    closeBurger: closeBurger,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }) : null));\n};\n\nconst Menu = ({\n  setOpen,\n  open,\n  children\n}) => __jsx(Slide, {\n  right: true,\n  width: \"100%\",\n  isOpen: open,\n  onStateChange: s => {\n    setOpen(s.isOpen);\n    document.body.style.setProperty(\"overflow\", s.isOpen ? \"hidden\" : \"scroll\");\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 3\n  }\n}, children);\n\nexport const BurgerItem = ({\n  link,\n  closeBurger\n}) => {\n  const {\n    t\n  } = useTranslation();\n  return __jsx(Button, {\n    style: {\n      marginBottom: \"10px\"\n    },\n    color: \"info\",\n    fluid: true,\n    circular: true,\n    design: \"background\",\n    onClick: e => {\n      link.onClick(e);\n      closeBurger();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }\n  }, t(link.name).toUpperCase());\n};\n\nconst DesktopItem = ({\n  link\n}) => __jsx(\"button\", {\n  onClick: link.onClick,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 3\n  }\n}, link.name);","map":{"version":3,"sources":["/Users/benka/go/src/github.com/benka-me/laruche-web/components/navigation/navigation.tsx"],"names":["useContext","useState","router","logout","Context","useTranslation","slide","Slide","Messages","cssDesktop","cssMobile","Container","GiBee","Button","links","name","contact","onClick","e","push","login","setLogin","title","t","Desktop","navbar","menu","menuLeft","menuRight","map","link","i","Mobile","open","setOpen","closeBurger","mobile","back","home","Menu","children","s","isOpen","document","body","style","setProperty","BurgerItem","marginBottom","toUpperCase","DesktopItem"],"mappings":"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","sourcesContent":["import { useContext, useState } from \"react\";\nimport router from \"next/router\";\nimport { logout } from \"utils/utils\";\nimport Context from \"context/context\";\nimport { useTranslation } from \"react-i18next\";\nimport { slide as Slide, State } from \"react-burger-menu\";\nimport { Messages } from \"i18n/i18n\";\nimport cssDesktop from \"./navigation-desktop.scss\";\nimport cssMobile from \"./navigation-mobile.scss\";\nimport { OnClick } from \"types/types\";\nimport { TFunction } from \"i18next\";\nimport { Container } from \"components/class/container/container\";\nimport { GiBee } from \"react-icons/gi\";\nimport { Button } from \"components/class/button/button\";\n\ntype Link = {\n  name: string;\n  onClick: OnClick;\n};\nconst links: Link[] = [\n  { name: Messages.contact, onClick: e => router.push(\"/contact\", \"/contact\") },\n  {\n    name: \"Get Started\",\n    onClick: e => router.push(\"/get-started\", \"/get-started\")\n  }\n];\n\nexport default () => {\n  const { login, setLogin, title } = useContext(Context);\n  const { t } = useTranslation();\n  return (\n    <>\n      <Mobile login={login} setLogin={setLogin} title={title} t={t} />\n      <Desktop login={login} setLogin={setLogin} title={title} t={t} />\n    </>\n  );\n};\n\ninterface SubProps {\n  setLogin: (b: boolean) => void;\n  title: JSX.Element;\n  login: boolean;\n  t: TFunction;\n}\nconst Desktop = ({ setLogin, title, login, t }: SubProps) => (\n  <div className={cssDesktop.navbar}>\n    <Container>\n      <div className={cssDesktop.menu}>\n        <div className={cssDesktop.menuLeft}>\n          <button onClick={e => router.push(\"/\")}>\n            <GiBee />\n          </button>\n          {title}\n        </div>\n        <div className={cssDesktop.menuRight}>\n          {login ? (\n            <DesktopItem\n              link={{ name: Messages.logout, onClick: e => logout(e, setLogin) }}\n            />\n          ) : null}\n          {links.map((link: Link, i: any) => (\n            <DesktopItem key={i} link={link} />\n          ))}\n        </div>\n      </div>\n    </Container>\n  </div>\n);\nconst Mobile = ({ setLogin, title, login, t }: SubProps) => {\n  const [open, setOpen] = useState(false);\n  const closeBurger = () => setOpen(false);\n  return (\n    <div className={cssMobile.mobile}>\n      <div className={cssMobile.back}>\n        <div className={cssMobile.title}>{title}</div>\n      </div>\n      <Menu setOpen={setOpen} open={open}>\n        <BurgerItem\n          link={{ name: Messages.home, onClick: e => router.push(\"/\") }}\n          closeBurger={closeBurger}\n        />\n        <>\n          {links.map((link: Link, i: number) => (\n            <BurgerItem link={link} key={i} closeBurger={closeBurger} />\n          ))}\n        </>\n        {login ? (\n          <BurgerItem\n            link={{ name: Messages.logout, onClick: e => logout(e, setLogin) }}\n            closeBurger={closeBurger}\n          />\n        ) : null}\n      </Menu>\n    </div>\n  );\n};\n\ninterface MenuProps {\n  setOpen: (b: boolean) => void;\n  open: boolean;\n  children: JSX.Element[] | JSX.Element;\n}\nconst Menu = ({ setOpen, open, children }: MenuProps) => (\n  <Slide\n    right\n    width={\"100%\"}\n    isOpen={open}\n    onStateChange={(s: State) => {\n      setOpen(s.isOpen);\n      document.body.style.setProperty(\n        \"overflow\",\n        s.isOpen ? \"hidden\" : \"scroll\"\n      );\n    }}\n  >\n    {children}\n  </Slide>\n);\n\ninterface ItemProps {\n  link: Link;\n  closeBurger?: () => void;\n}\nexport const BurgerItem = ({ link, closeBurger }: ItemProps) => {\n  const { t } = useTranslation();\n  return (\n    <Button\n      style={{ marginBottom: \"10px\" }}\n      color=\"info\"\n      fluid\n      circular\n      design=\"background\"\n      onClick={e => {\n        link.onClick(e);\n        closeBurger();\n      }}\n    >\n      {t(link.name).toUpperCase()}\n    </Button>\n  );\n};\nconst DesktopItem = ({ link }: ItemProps) => (\n  <button onClick={link.onClick}>{link.name}</button>\n);\n"]},"metadata":{},"sourceType":"module"}